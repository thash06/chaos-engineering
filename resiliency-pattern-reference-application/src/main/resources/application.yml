spring:
  application.name: resiliency-patterns-reference-app
  jackson.serialization.indent_output: true

server:
  port: 9000

remote:
  server:
    url: "http://localhost:8080/data-service/offerings"

chaos:
  monkey:
    watcher:
      controller: false
      restController: true
      service: false
      repository: false
    enabled: false

management:
  endpoint:
    chaosmonkey.enabled: true
    chaosmonkeyjmx.enabled: true

  endpoints:
    web.exposure.include: '*'
gremlin.alfi.application:
  type: Springboot
  name: Gremlin-ALFI-Provider


########### Resilience4j ###############
management.endpoints.web.exposure.include: '*'
management.endpoint.health.show-details: always

management.health.diskspace.enabled: false
management.health.circuitbreakers.enabled: true
management.health.ratelimiters.enabled: false

info:
  name: ${spring.application.name}
  description: resilience4j demo
  environment: ${spring.profiles.active}
  version: 0.0.1

management.metrics.tags.application: ${spring.application.name}
management.metrics.distribution.percentiles-histogram.http.server.requests: true
management.metrics.distribution.percentiles-histogram.resilience4j.circuitbreaker.calls: true

#resilience4j.circuitbreaker.metrics.use_legacy_binder: true

resilience4j.circuitbreaker:
  configs:
    default:
      failureRateThreshold: 25
      waitDurationInOpenState: 10000
      permittedNumberOfCallsInHalfOpenState: 2
      slidingWindowSize: 4
      registerHealthIndicator: true
      minimumNumberOfCalls: 5
      automaticTransitionFromOpenToHalfOpenEnabled: true
      eventConsumerBufferSize: 10
      recordExceptions:
        - java.net.ConnectException
        - org.springframework.web.client.ResourceAccessException
      ignoreExceptions:
        - com.fidelity.fbt.resiliency.refapp.exception.ChaosEngineeringException
  instances:
    data-service:
      baseConfig: default
      #recordFailurePredicate: io.github.robwin.exception.RecordFailurePredicate

resilience4j.retry:
  configs:
    default:
      waitDuration: 1000
      maxRetryAttempts: 10
      retryExceptions:
        - java.net.ConnectException
        - org.springframework.web.client.ResourceAccessException
      ignoreExceptions:
        - com.fidelity.fbt.resiliency.refapp.exception.ChaosEngineeringException
  instances:
    data-service:
      baseConfig: default

resilience4j.bulkhead:
  configs:
    default:
      maxConcurrentCalls: 100
  instances:
    data-service:
      maxWaitDuration: 10ms
      maxConcurrentCalls: 20

#resilience4j.thread-pool-bulkhead:
#  configs:
#    default:
#      maxThreadPoolSize: 4
#      coreThreadPoolSize: 2
#      queueCapacity: 2
#  instances:
#    data-service:
#      maxThreadPoolSize: 1
#      coreThreadPoolSize: 1
#      queueCapacity: 1

resilience4j.ratelimiter:
  configs:
    default:
      registerHealthIndicator: false
      limitForPeriod: 10
      limitRefreshPeriod: 1s
      timeoutDuration: 0
      eventConsumerBufferSize: 100
  instances:
    data-service:
      limitForPeriod: 6
      limitRefreshPeriod: 500ms
      timeoutDuration: 3s
resilience4j:
  configs:
    default:
      cancelRunningFuture: false
      timeoutDuration: 2s
  instances:
    data-service:
      baseConfig: default